{"ast":null,"code":"var _jsxFileName = \"/Users/anhadparashar/Desktop/stuFF/PROGRAMMMING/ReactJs/utilities/src/components/TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n\n  const handleLoClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n\n  const handleClearClick = () => {\n    // console.log(\"Uppercase was clicked\" + text);\n    let newText = '';\n    setText(newText);\n  };\n\n  const handleOnChange = event => {\n    // console.log(\"On Change\");\n    setText(event.target.value);\n  };\n\n  const handleCopy = () => {\n    console.log(\"I am copy\");\n    var text = document.getElementById(\"myBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n  };\n\n  const [text, setText] = useState(''); // text = \"Change the text\" // This is the wrong way to update the text in ReactJs \n  // setText(\"Change the text here\") // This is the correct way to update the text in ReactJs \n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          style: {\n            backgroundColor: props.mode === 'dark' ? 'rgb(21 21 21)' : 'white',\n            color: props.mode === 'dark' ? 'white' : 'black'\n          },\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btm btn-primary mx-1 my-1\",\n        onClick: handleUpClick,\n        children: \"Convert To Upercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btm btn-primary mx-1 my-1\",\n        onClick: handleLoClick,\n        children: \"Convert To Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btm btn-primary mx-1 my-1\",\n        onClick: handleClearClick,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btm btn-primary mx-1 my-1\",\n        onClick: handleCopy,\n        children: \"Copy text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'grey'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length - 1, \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 49\n        }, this), \" and \", text.length, \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 80\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * (text.split(\" \").length - 1), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Minutes read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 59\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview of your text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Enter something in the textbox to preview it\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TextForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"sources":["/Users/anhadparashar/Desktop/stuFF/PROGRAMMMING/ReactJs/utilities/src/components/TextForm.js"],"names":["React","useState","TextForm","props","handleUpClick","newText","text","toUpperCase","setText","handleLoClick","toLowerCase","handleClearClick","handleOnChange","event","target","value","handleCopy","console","log","document","getElementById","select","navigator","clipboard","writeText","color","mode","heading","backgroundColor","split","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nexport default function TextForm(props) {\n\n    const handleUpClick = ()=> {\n        let newText = text.toUpperCase();\n        setText(newText)\n    }\n\n    const handleLoClick = ()=> {\n        let newText = text.toLowerCase();\n        setText(newText)\n    }\n\n    const handleClearClick = ()=> {\n        // console.log(\"Uppercase was clicked\" + text);\n        let newText = '';\n        setText(newText)\n    }\n\n    const handleOnChange = (event)=> {\n        // console.log(\"On Change\");\n        setText(event.target.value)\n    }\n\n    const handleCopy = () => {\n        console.log(\"I am copy\");\n        var text = document.getElementById(\"myBox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n\n\n    }\n\n    const [text, setText] = useState('');\n    // text = \"Change the text\" // This is the wrong way to update the text in ReactJs \n    // setText(\"Change the text here\") // This is the correct way to update the text in ReactJs \n\n    return (\n        <>\n            <div className = \"container\" style={{color: props.mode==='dark'?'white':'black'}}>\n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\">\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'rgb(21 21 21)':'white', color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n                <button className=\"btm btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert To Upercase</button>\n                <button className=\"btm btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert To Lowercase</button>\n                <button className=\"btm btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\n                <button className=\"btm btn-primary mx-1 my-1\" onClick={handleCopy}>Copy text</button>\n            </div>\n\n            <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'grey'}}>\n                <h2>Your text summary</h2>\n                <p>{text.split(\" \").length - 1} <b>words</b> and {text.length} <b>characters</b></p>\n                <p>{0.008 * (text.split(\" \").length - 1)} <b>Minutes read</b></p>\n                <h2>Preview of your text</h2>\n                <p>{text.length>0?text:\"Enter something in the textbox to preview it\"}</p>\n            </div>\n        </>\n            \n    )\n}\n"]},"metadata":{},"sourceType":"module"}